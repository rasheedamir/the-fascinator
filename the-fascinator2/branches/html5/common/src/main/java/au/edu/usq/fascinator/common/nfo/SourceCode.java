/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1535 2008-09-09 15:44:46Z max.at.xam.de $) on 15/09/09 11:49 AM
 */
package au.edu.usq.fascinator.common.nfo;

import org.ontoware.aifbcommons.collection.ClosableIterator;
import org.ontoware.rdf2go.exception.ModelRuntimeException;
import org.ontoware.rdf2go.model.Model;
import org.ontoware.rdf2go.model.node.BlankNode;
import org.ontoware.rdf2go.model.node.URI;
import org.ontoware.rdf2go.model.node.impl.URIImpl;
import org.ontoware.rdfreactor.runtime.Base;
import org.ontoware.rdfreactor.runtime.ReactorResult;

/**
 * This class manages access to these properties:
 * <ul>
 *   <li> CommentCharacterCount </li>
 *   <li> DefinesClass </li>
 *   <li> DefinesFunction </li>
 *   <li> DefinesGlobalVariable </li>
 *   <li> ProgrammingLanguage </li>
 * </ul>
 *
 * This class was generated by <a href="http://RDFReactor.semweb4j.org">RDFReactor</a> on 15/09/09 11:49 AM
 */
public class SourceCode extends PlainTextDocument {

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#SourceCode */
    @SuppressWarnings("hiding")
	public static final URI RDFS_CLASS = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#SourceCode", false);

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#commentCharacterCount */
    @SuppressWarnings("hiding")
	public static final URI COMMENTCHARACTERCOUNT = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#commentCharacterCount",false);

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesClass */
    @SuppressWarnings("hiding")
	public static final URI DEFINESCLASS = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesClass",false);

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesFunction */
    @SuppressWarnings("hiding")
	public static final URI DEFINESFUNCTION = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesFunction",false);

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesGlobalVariable */
    @SuppressWarnings("hiding")
	public static final URI DEFINESGLOBALVARIABLE = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesGlobalVariable",false);

    /** http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#programmingLanguage */
    @SuppressWarnings("hiding")
	public static final URI PROGRAMMINGLANGUAGE = new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#programmingLanguage",false);

    /** 
     * All property-URIs with this class as domain.
     * All properties of all super-classes are also available. 
     */
    @SuppressWarnings("hiding")
    public static final URI[] MANAGED_URIS = {
      new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#commentCharacterCount",false),
      new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesClass",false),
      new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesFunction",false),
      new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#definesGlobalVariable",false),
      new URIImpl("http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#programmingLanguage",false) 
    };


	// protected constructors needed for inheritance
	
	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.semweb4j.org
	 * @param classURI URI of RDFS class
	 * @param instanceIdentifier Resource that identifies this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c1] 
	 */
	protected SourceCode ( Model model, URI classURI, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, classURI, instanceIdentifier, write);
	}

	// public constructors

	/**
	 * Returns a Java wrapper over an RDF object, identified by URI.
	 * Creating two wrappers for the same instanceURI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param instanceIdentifier an RDF2Go Resource identifying this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c2] 
	 */
	public SourceCode ( Model model, org.ontoware.rdf2go.model.node.Resource instanceIdentifier, boolean write ) {
		super(model, RDFS_CLASS, instanceIdentifier, write);
	}


	/**
	 * Returns a Java wrapper over an RDF object, identified by a URI, given as a String.
	 * Creating two wrappers for the same URI is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param uriString a URI given as a String
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 * @throws ModelRuntimeException if URI syntax is wrong
	 *
	 * [Generated from RDFReactor template rule #c7] 
	 */
	public SourceCode ( Model model, String uriString, boolean write) throws ModelRuntimeException {
		super(model, RDFS_CLASS, new URIImpl(uriString,false), write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by a blank node.
	 * Creating two wrappers for the same blank node is legal.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param bnode BlankNode of this instance
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c8] 
	 */
	public SourceCode ( Model model, BlankNode bnode, boolean write ) {
		super(model, RDFS_CLASS, bnode, write);
	}

	/**
	 * Returns a Java wrapper over an RDF object, identified by 
	 * a randomly generated URI.
	 * Creating two wrappers results in different URIs.
	 * @param model RDF2GO Model implementation, see http://rdf2go.ontoware.org
	 * @param write if true, the statement (this, rdf:type, TYPE) is written to the model
	 *
	 * [Generated from RDFReactor template rule #c9] 
	 */
	public SourceCode ( Model model, boolean write ) {
		super(model, RDFS_CLASS, model.newRandomUniqueURI(), write);
	}

    ///////////////////////////////////////////////////////////////////
    // typing

	/**
	 * Return an existing instance of this class in the model. No statements are written.
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return an instance of SourceCode  or null if none existst
	 *
	 * [Generated from RDFReactor template rule #class0] 
	 */
	public static SourceCode  getInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getInstance(model, instanceResource, SourceCode.class);
	}

	/**
	 * Create a new instance of this class in the model. 
	 * That is, create the statement (instanceResource, RDF.type, http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#SourceCode).
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class1] 
	 */
	public static void createInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.createInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 * @return true if instanceResource is an instance of this class in the model
	 *
	 * [Generated from RDFReactor template rule #class2] 
	 */
	public static boolean hasInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.hasInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as RDF resources
	 *
	 * [Generated from RDFReactor template rule #class3] 
	 */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Resource> getAllInstances(Model model) {
		return Base.getAllInstances(model, RDFS_CLASS, org.ontoware.rdf2go.model.node.Resource.class);
	}

	/**
	 * @param model an RDF2Go model
	 * @return all instances of this class in Model 'model' as a ReactorResult,
	 * which can conveniently be converted to iterator, list or array.
	 *
	 * [Generated from RDFReactor template rule #class3-as] 
	 */
	public static ReactorResult<? extends SourceCode> getAllInstances_as(Model model) {
		return Base.getAllInstances_as(model, RDFS_CLASS, SourceCode.class );
	}

    /**
	 * Remove rdf:type SourceCode from this instance. Other triples are not affected.
	 * To delete more, use deleteAllProperties
	 * @param model an RDF2Go model
	 * @param instanceResource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #class4] 
	 */
	public static void deleteInstance(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteInstance(model, RDFS_CLASS, instanceResource);
	}

	/**
	 * Delete all (this, *, *), i.e. including rdf:type
	 * @param model an RDF2Go model
	 * @param resource
	 */
	public static void deleteAllProperties(Model model,	org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.deleteAllProperties(model, instanceResource);
	}

    ///////////////////////////////////////////////////////////////////
    // property access methods


    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1fbebee has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, COMMENTCHARACTERCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1fbebee has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasCommentCharacterCount() {
		return Base.has(this.model, this.getResource(), COMMENTCHARACTERCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1fbebee has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, COMMENTCHARACTERCOUNT);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1fbebee has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasCommentCharacterCount( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), COMMENTCHARACTERCOUNT);
	}

     /**
     * Get all values of property CommentCharacterCount as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllCommentCharacterCount_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, COMMENTCHARACTERCOUNT);
	}
	
    /**
     * Get all values of property CommentCharacterCount as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllCommentCharacterCount_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, COMMENTCHARACTERCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property CommentCharacterCount as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllCommentCharacterCount_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), COMMENTCHARACTERCOUNT);
	}

    /**
     * Get all values of property CommentCharacterCount as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllCommentCharacterCount_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), COMMENTCHARACTERCOUNT, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property CommentCharacterCount     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.Integer> getAllCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, COMMENTCHARACTERCOUNT, java.lang.Integer.class);
	}
	
    /**
     * Get all values of property CommentCharacterCount as a ReactorResult of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.Integer> getAllCommentCharacterCount_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, COMMENTCHARACTERCOUNT, java.lang.Integer.class);
	}

    /**
     * Get all values of property CommentCharacterCount     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.Integer> getAllCommentCharacterCount() {
		return Base.getAll(this.model, this.getResource(), COMMENTCHARACTERCOUNT, java.lang.Integer.class);
	}

    /**
     * Get all values of property CommentCharacterCount as a ReactorResult of java.lang.Integer 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.Integer> getAllCommentCharacterCount_as() {
		return Base.getAll_as(this.model, this.getResource(), COMMENTCHARACTERCOUNT, java.lang.Integer.class);
	}
 
    /**
     * Adds a value to property CommentCharacterCount as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addCommentCharacterCount( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Adds a value to property CommentCharacterCount as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addCommentCharacterCount( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
    /**
     * Adds a value to property CommentCharacterCount from an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.add(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Adds a value to property CommentCharacterCount from an instance of java.lang.Integer 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addCommentCharacterCount(java.lang.Integer value) {
		Base.add(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
  

    /**
     * Sets a value of property CommentCharacterCount from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setCommentCharacterCount( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Sets a value of property CommentCharacterCount from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setCommentCharacterCount( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
    /**
     * Sets a value of property CommentCharacterCount from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.set(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Sets a value of property CommentCharacterCount from an instance of java.lang.Integer 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setCommentCharacterCount(java.lang.Integer value) {
		Base.set(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
  


    /**
     * Removes a value of property CommentCharacterCount as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeCommentCharacterCount( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Removes a value of property CommentCharacterCount as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeCommentCharacterCount( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
    /**
     * Removes a value of property CommentCharacterCount given as an instance of java.lang.Integer 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeCommentCharacterCount(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.Integer value) {
		Base.remove(model, instanceResource, COMMENTCHARACTERCOUNT, value);
	}
	
    /**
     * Removes a value of property CommentCharacterCount given as an instance of java.lang.Integer 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeCommentCharacterCount(java.lang.Integer value) {
		Base.remove(this.model, this.getResource(), COMMENTCHARACTERCOUNT, value);
	}
  
    /**
     * Removes all values of property CommentCharacterCount     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllCommentCharacterCount( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, COMMENTCHARACTERCOUNT);
	}
	
    /**
     * Removes all values of property CommentCharacterCount	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllCommentCharacterCount() {
		Base.removeAll(this.model, this.getResource(), COMMENTCHARACTERCOUNT);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1ec4333 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, DEFINESCLASS);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1ec4333 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasDefinesClass() {
		return Base.has(this.model, this.getResource(), DEFINESCLASS);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1ec4333 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, DEFINESCLASS);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1ec4333 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasDefinesClass( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), DEFINESCLASS);
	}

     /**
     * Get all values of property DefinesClass as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesClass_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, DEFINESCLASS);
	}
	
    /**
     * Get all values of property DefinesClass as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesClass_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESCLASS, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property DefinesClass as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesClass_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), DEFINESCLASS);
	}

    /**
     * Get all values of property DefinesClass as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesClass_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESCLASS, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property DefinesClass     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, DEFINESCLASS, java.lang.String.class);
	}
	
    /**
     * Get all values of property DefinesClass as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllDefinesClass_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESCLASS, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesClass     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllDefinesClass() {
		return Base.getAll(this.model, this.getResource(), DEFINESCLASS, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesClass as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllDefinesClass_as() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESCLASS, java.lang.String.class);
	}
 
    /**
     * Adds a value to property DefinesClass as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addDefinesClass( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Adds a value to property DefinesClass as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addDefinesClass( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), DEFINESCLASS, value);
	}
    /**
     * Adds a value to property DefinesClass from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Adds a value to property DefinesClass from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addDefinesClass(java.lang.String value) {
		Base.add(this.model, this.getResource(), DEFINESCLASS, value);
	}
  

    /**
     * Sets a value of property DefinesClass from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setDefinesClass( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Sets a value of property DefinesClass from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setDefinesClass( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), DEFINESCLASS, value);
	}
    /**
     * Sets a value of property DefinesClass from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Sets a value of property DefinesClass from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setDefinesClass(java.lang.String value) {
		Base.set(this.model, this.getResource(), DEFINESCLASS, value);
	}
  


    /**
     * Removes a value of property DefinesClass as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeDefinesClass( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Removes a value of property DefinesClass as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeDefinesClass( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), DEFINESCLASS, value);
	}
    /**
     * Removes a value of property DefinesClass given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeDefinesClass(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, DEFINESCLASS, value);
	}
	
    /**
     * Removes a value of property DefinesClass given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeDefinesClass(java.lang.String value) {
		Base.remove(this.model, this.getResource(), DEFINESCLASS, value);
	}
  
    /**
     * Removes all values of property DefinesClass     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllDefinesClass( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, DEFINESCLASS);
	}
	
    /**
     * Removes all values of property DefinesClass	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllDefinesClass() {
		Base.removeAll(this.model, this.getResource(), DEFINESCLASS);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1712492 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, DEFINESFUNCTION);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1712492 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasDefinesFunction() {
		return Base.has(this.model, this.getResource(), DEFINESFUNCTION);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1712492 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, DEFINESFUNCTION);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1712492 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasDefinesFunction( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), DEFINESFUNCTION);
	}

     /**
     * Get all values of property DefinesFunction as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesFunction_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, DEFINESFUNCTION);
	}
	
    /**
     * Get all values of property DefinesFunction as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesFunction_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESFUNCTION, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property DefinesFunction as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesFunction_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), DEFINESFUNCTION);
	}

    /**
     * Get all values of property DefinesFunction as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesFunction_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESFUNCTION, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property DefinesFunction     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, DEFINESFUNCTION, java.lang.String.class);
	}
	
    /**
     * Get all values of property DefinesFunction as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllDefinesFunction_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESFUNCTION, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesFunction     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllDefinesFunction() {
		return Base.getAll(this.model, this.getResource(), DEFINESFUNCTION, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesFunction as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllDefinesFunction_as() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESFUNCTION, java.lang.String.class);
	}
 
    /**
     * Adds a value to property DefinesFunction as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addDefinesFunction( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Adds a value to property DefinesFunction as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addDefinesFunction( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
    /**
     * Adds a value to property DefinesFunction from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Adds a value to property DefinesFunction from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addDefinesFunction(java.lang.String value) {
		Base.add(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
  

    /**
     * Sets a value of property DefinesFunction from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setDefinesFunction( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Sets a value of property DefinesFunction from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setDefinesFunction( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
    /**
     * Sets a value of property DefinesFunction from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Sets a value of property DefinesFunction from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setDefinesFunction(java.lang.String value) {
		Base.set(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
  


    /**
     * Removes a value of property DefinesFunction as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeDefinesFunction( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Removes a value of property DefinesFunction as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeDefinesFunction( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
    /**
     * Removes a value of property DefinesFunction given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeDefinesFunction(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, DEFINESFUNCTION, value);
	}
	
    /**
     * Removes a value of property DefinesFunction given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeDefinesFunction(java.lang.String value) {
		Base.remove(this.model, this.getResource(), DEFINESFUNCTION, value);
	}
  
    /**
     * Removes all values of property DefinesFunction     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllDefinesFunction( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, DEFINESFUNCTION);
	}
	
    /**
     * Removes all values of property DefinesFunction	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllDefinesFunction() {
		Base.removeAll(this.model, this.getResource(), DEFINESFUNCTION);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bf00a9 has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, DEFINESGLOBALVARIABLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bf00a9 has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasDefinesGlobalVariable() {
		return Base.has(this.model, this.getResource(), DEFINESGLOBALVARIABLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bf00a9 has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, DEFINESGLOBALVARIABLE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1bf00a9 has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasDefinesGlobalVariable( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), DEFINESGLOBALVARIABLE);
	}

     /**
     * Get all values of property DefinesGlobalVariable as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesGlobalVariable_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, DEFINESGLOBALVARIABLE);
	}
	
    /**
     * Get all values of property DefinesGlobalVariable as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesGlobalVariable_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESGLOBALVARIABLE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property DefinesGlobalVariable as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllDefinesGlobalVariable_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), DEFINESGLOBALVARIABLE);
	}

    /**
     * Get all values of property DefinesGlobalVariable as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllDefinesGlobalVariable_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESGLOBALVARIABLE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property DefinesGlobalVariable     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, DEFINESGLOBALVARIABLE, java.lang.String.class);
	}
	
    /**
     * Get all values of property DefinesGlobalVariable as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllDefinesGlobalVariable_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, DEFINESGLOBALVARIABLE, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesGlobalVariable     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllDefinesGlobalVariable() {
		return Base.getAll(this.model, this.getResource(), DEFINESGLOBALVARIABLE, java.lang.String.class);
	}

    /**
     * Get all values of property DefinesGlobalVariable as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllDefinesGlobalVariable_as() {
		return Base.getAll_as(this.model, this.getResource(), DEFINESGLOBALVARIABLE, java.lang.String.class);
	}
 
    /**
     * Adds a value to property DefinesGlobalVariable as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addDefinesGlobalVariable( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Adds a value to property DefinesGlobalVariable as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addDefinesGlobalVariable( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
    /**
     * Adds a value to property DefinesGlobalVariable from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Adds a value to property DefinesGlobalVariable from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addDefinesGlobalVariable(java.lang.String value) {
		Base.add(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
  

    /**
     * Sets a value of property DefinesGlobalVariable from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setDefinesGlobalVariable( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Sets a value of property DefinesGlobalVariable from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setDefinesGlobalVariable( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
    /**
     * Sets a value of property DefinesGlobalVariable from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Sets a value of property DefinesGlobalVariable from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setDefinesGlobalVariable(java.lang.String value) {
		Base.set(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
  


    /**
     * Removes a value of property DefinesGlobalVariable as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeDefinesGlobalVariable( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Removes a value of property DefinesGlobalVariable as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeDefinesGlobalVariable( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
    /**
     * Removes a value of property DefinesGlobalVariable given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeDefinesGlobalVariable(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, DEFINESGLOBALVARIABLE, value);
	}
	
    /**
     * Removes a value of property DefinesGlobalVariable given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeDefinesGlobalVariable(java.lang.String value) {
		Base.remove(this.model, this.getResource(), DEFINESGLOBALVARIABLE, value);
	}
  
    /**
     * Removes all values of property DefinesGlobalVariable     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllDefinesGlobalVariable( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, DEFINESGLOBALVARIABLE);
	}
	
    /**
     * Removes all values of property DefinesGlobalVariable	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllDefinesGlobalVariable() {
		Base.removeAll(this.model, this.getResource(), DEFINESGLOBALVARIABLE);
	}
     /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1626c6d has at least one value set 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-static] 
     */
	public static boolean hasProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.has(model, instanceResource, PROGRAMMINGLANGUAGE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1626c6d has at least one value set 
     * @return true if this property has at least one value
	 *
	 * [Generated from RDFReactor template rule #get0has-dynamic] 
     */
	public boolean hasProgrammingLanguage() {
		return Base.has(this.model, this.getResource(), PROGRAMMINGLANGUAGE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1626c6d has the given value (maybe among other values).  
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-static] 
     */
	public static boolean hasProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(model, instanceResource, PROGRAMMINGLANGUAGE);
	}

    /**
     * Check if org.ontoware.rdfreactor.generator.java.JProperty@1626c6d has the given value (maybe among other values).  
	 * @param value the value to be checked
     * @return true if this property contains (maybe among other) the given value
	 *
	 * [Generated from RDFReactor template rule #get0has-value-dynamic] 
     */
	public boolean hasProgrammingLanguage( org.ontoware.rdf2go.model.node.Node value ) {
		return Base.hasValue(this.model, this.getResource(), PROGRAMMINGLANGUAGE);
	}

     /**
     * Get all values of property ProgrammingLanguage as an Iterator over RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static] 
     */
	public static ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllProgrammingLanguage_asNode(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_asNode(model, instanceResource, PROGRAMMINGLANGUAGE);
	}
	
    /**
     * Get all values of property ProgrammingLanguage as a ReactorResult of RDF2Go nodes 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get7static-reactor-result] 
     */
	public static ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllProgrammingLanguage_asNode_(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PROGRAMMINGLANGUAGE, org.ontoware.rdf2go.model.node.Node.class);
	}

    /**
     * Get all values of property ProgrammingLanguage as an Iterator over RDF2Go nodes 
     * @return a ClosableIterator of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic] 
     */
	public ClosableIterator<org.ontoware.rdf2go.model.node.Node> getAllProgrammingLanguage_asNode() {
		return Base.getAll_asNode(this.model, this.getResource(), PROGRAMMINGLANGUAGE);
	}

    /**
     * Get all values of property ProgrammingLanguage as a ReactorResult of RDF2Go nodes 
     * @return a List of RDF2Go Nodes
	 *
	 * [Generated from RDFReactor template rule #get8dynamic-reactor-result] 
     */
	public ReactorResult<org.ontoware.rdf2go.model.node.Node> getAllProgrammingLanguage_asNode_() {
		return Base.getAll_as(this.model, this.getResource(), PROGRAMMINGLANGUAGE, org.ontoware.rdf2go.model.node.Node.class);
	}
     /**
     * Get all values of property ProgrammingLanguage     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get11static] 
     */
	public static ClosableIterator<java.lang.String> getAllProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll(model, instanceResource, PROGRAMMINGLANGUAGE, java.lang.String.class);
	}
	
    /**
     * Get all values of property ProgrammingLanguage as a ReactorResult of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get11static-reactorresult] 
     */
	public static ReactorResult<java.lang.String> getAllProgrammingLanguage_as(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		return Base.getAll_as(model, instanceResource, PROGRAMMINGLANGUAGE, java.lang.String.class);
	}

    /**
     * Get all values of property ProgrammingLanguage     * @return a ClosableIterator of $type
	 *
	 * [Generated from RDFReactor template rule #get12dynamic] 
     */
	public ClosableIterator<java.lang.String> getAllProgrammingLanguage() {
		return Base.getAll(this.model, this.getResource(), PROGRAMMINGLANGUAGE, java.lang.String.class);
	}

    /**
     * Get all values of property ProgrammingLanguage as a ReactorResult of java.lang.String 
     * @return a ReactorResult of $type which can conveniently be converted to iterator, list or array
	 *
	 * [Generated from RDFReactor template rule #get12dynamic-reactorresult] 
     */
	public ReactorResult<java.lang.String> getAllProgrammingLanguage_as() {
		return Base.getAll_as(this.model, this.getResource(), PROGRAMMINGLANGUAGE, java.lang.String.class);
	}
 
    /**
     * Adds a value to property ProgrammingLanguage as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1static] 
     */
	public static void addProgrammingLanguage( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.add(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Adds a value to property ProgrammingLanguage as an RDF2Go node 
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #add1dynamic] 
     */
	public void addProgrammingLanguage( org.ontoware.rdf2go.model.node.Node value) {
		Base.add(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
    /**
     * Adds a value to property ProgrammingLanguage from an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #add3static] 
     */
	public static void addProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.add(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Adds a value to property ProgrammingLanguage from an instance of java.lang.String 
	 *
	 * [Generated from RDFReactor template rule #add4dynamic] 
     */
	public void addProgrammingLanguage(java.lang.String value) {
		Base.add(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
  

    /**
     * Sets a value of property ProgrammingLanguage from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be set
	 *
	 * [Generated from RDFReactor template rule #set1static] 
     */
	public static void setProgrammingLanguage( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.set(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Sets a value of property ProgrammingLanguage from an RDF2Go node.
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set1dynamic] 
     */
	public void setProgrammingLanguage( org.ontoware.rdf2go.model.node.Node value) {
		Base.set(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
    /**
     * Sets a value of property ProgrammingLanguage from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set3static] 
     */
	public static void setProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.set(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Sets a value of property ProgrammingLanguage from an instance of java.lang.String 
     * First, all existing values are removed, then this value is added.
     * Cardinality constraints are not checked, but this method exists only for properties with
     * no minCardinality or minCardinality == 1.
	 * @param value the value to be added
	 *
	 * [Generated from RDFReactor template rule #set4dynamic] 
     */
	public void setProgrammingLanguage(java.lang.String value) {
		Base.set(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
  


    /**
     * Removes a value of property ProgrammingLanguage as an RDF2Go node 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1static] 
     */
	public static void removeProgrammingLanguage( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Removes a value of property ProgrammingLanguage as an RDF2Go node
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove1dynamic] 
     */
	public void removeProgrammingLanguage( org.ontoware.rdf2go.model.node.Node value) {
		Base.remove(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
    /**
     * Removes a value of property ProgrammingLanguage given as an instance of java.lang.String 
     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove3static] 
     */
	public static void removeProgrammingLanguage(Model model, org.ontoware.rdf2go.model.node.Resource instanceResource, java.lang.String value) {
		Base.remove(model, instanceResource, PROGRAMMINGLANGUAGE, value);
	}
	
    /**
     * Removes a value of property ProgrammingLanguage given as an instance of java.lang.String 
	 * @param value the value to be removed
	 *
	 * [Generated from RDFReactor template rule #remove4dynamic] 
     */
	public void removeProgrammingLanguage(java.lang.String value) {
		Base.remove(this.model, this.getResource(), PROGRAMMINGLANGUAGE, value);
	}
  
    /**
     * Removes all values of property ProgrammingLanguage     * @param model an RDF2Go model
     * @param resource an RDF2Go resource
	 *
	 * [Generated from RDFReactor template rule #removeall1static] 
     */
	public static void removeAllProgrammingLanguage( Model model, org.ontoware.rdf2go.model.node.Resource instanceResource) {
		Base.removeAll(model, instanceResource, PROGRAMMINGLANGUAGE);
	}
	
    /**
     * Removes all values of property ProgrammingLanguage	 *
	 * [Generated from RDFReactor template rule #removeall1dynamic] 
     */
	public void removeAllProgrammingLanguage() {
		Base.removeAll(this.model, this.getResource(), PROGRAMMINGLANGUAGE);
	}
 }